
SHELL = /bin/bash
VPATH = ./

ifndef XILINX_SDX
$(error Environment variable XILINX_SDX is required and should point to SDAccel install area)
endif

SDA_FLOW = cpu_emu
HOST_SRCS = host.cpp
HOST_EXE_DIR=.
HOST_EXE = host.exe
#HOST_CFLAGS = -g -Wall -DFPGA_DEVICE -DC_KERNEL 
HOST_CFLAGS = -g -Wall -DFPGA_DEVICE
HOST_LFLAGS = 

KERNEL_SRCS = systolic.cl
KERNEL_NAME = systolic_top
KERNEL_DEFS = 
KERNEL_INCS = 

#set target device for XCLBIN
XDEVICE=xilinx:adm-pcie-ku3:2ddr-xpr:4.0
XDEVICE_REPO_PATH=
KEEP_TEMP=1
KERNEL_DEBUG=
XCLBIN_NAME=bin_systolic
HOST_CFLAGS+=-DTARGET_DEVICE=\"${XDEVICE}\"
#BOARD_SETUP_FILE needs to point to setup.sh generated by xbinst command
BOARD_SETUP_FILE=setup.sh

ifeq (${SDA_FLOW},cpu_emu)
    CLCC_OPT += -t sw_emu
    XCLBIN = ${XCLBIN_NAME}_cpu_emu.xclbin
else ifeq (${SDA_FLOW},hw_emu)
    CLCC_OPT += -t hw_emu
    XCLBIN = ${XCLBIN_NAME}_hw_emu.xclbin
else ifeq (${SDA_FLOW},hw)
    XCLBIN = ${XCLBIN_NAME}_hw.xclbin
    CLCC_OPT += -t hw
endif

HOST_ARGS = ${XCLBIN}


#supported flow: cpu_emu, hw_emu, hw
CC = g++
CLCC = xocc

ifeq ($(XDEVICE_REPO_PATH),)
#no device repo path set. do nothing
    DEVICE_REPO_OPT = 
else
    DEVICE_REPO_OPT = --xp prop:solution.device_repo_paths=${XDEVICE_REPO_PATH} 
endif

FIFO_DEPTH_OPT = --xp "param:compiler.xclDataflowFifoDepth=1"

#HOST_LFLAGS += ${XILINX_SDACCEL}/lib/lnx64.o/libstdc++.so.6
HOST_CFLAGS += -I${XILINX_SDX}/runtime/include/1_2
#HOST_LFLAGS += -L${XILINX_SDX}/runtime/lib/x86_64 -lxilinxopencl -llmx6.0 -lstdc++
HOST_LFLAGS += -L${XILINX_SDX}/runtime/lib/x86_64 -lxilinxopencl -lstdc++
CLCC_OPT += $(CLCC_OPT_LEVEL) ${DEVICE_REPO_OPT} ${FIFO_DEPTH_OPT} --xdevice ${XDEVICE} -o ${XCLBIN} ${KERNEL_DEFS} ${KERNEL_INCS}

ifeq (${KEEP_TEMP},1)
    CLCC_OPT += -s
endif

ifeq (${KERNEL_DEBUG},1)
    CLCC_OPT += -g
endif

CLCC_OPT += --kernel ${KERNEL_NAME}
OBJECTS := $(HOST_SRCS:.cpp=.o)

$(warning $(OBJECTS))

.PHONY: all

all: run

host_exe: ${HOST_EXE_DIR}/${HOST_EXE}

xbin_cpu_em:
	make SDA_FLOW=cpu_emu xbin

xbin_hw_em:
	make SDA_FLOW=hw_emu xbin

xbin_hw :
	make SDA_FLOW=hw xbin

xbin: ${XCLBIN}

run_cpu_em: 
	make SDA_FLOW=cpu_emu run_em

run_hw_em: 
	make SDA_FLOW=hw_emu run_em

run_hw : 
	make SDA_FLOW=hw run_hw_int

run_em: xconfig host_exe xbin
	XCL_EMULATION_MODE=true ${HOST_EXE_DIR}/${HOST_EXE} ${HOST_ARGS}

run_hw_int : host_exe xbin_hw
	source ${BOARD_SETUP_FILE};${HOST_EXE_DIR}/${HOST_EXE} ${HOST_ARGS}

estimate : 
	${CLCC} -c -t hw_emu --xdevice ${XDEVICE} --report estimate ${KERNEL_SRCS}

xconfig : emconfig.json

emconfig.json :
	emconfigutil --xdevice ${XDEVICE} ${DEVICE_REPO_OPT} --od .

${HOST_EXE_DIR}/${HOST_EXE} : ${OBJECTS}
	${CC} ${HOST_LFLAGS} ${OBJECTS} -o $@ 

${XCLBIN}:
	${CLCC} ${CLCC_OPT} ${KERNEL_SRCS}

%.o: %.cpp
	${CC} ${HOST_CFLAGS} -c $< -o $@

clean:
	${RM} -rf ${HOST_EXE} ${OBJECTS} ${XCLBIN} emconfig.json _xocc_${XCLBIN_NAME}_*.dir .Xil

cleanall: clean
	${RM} -rf *.xclbin sdaccel_profile_summary.* _xocc_compile* _xocc_link* _xocc_krnl* TempConfig


help:
	@echo "Compile and run CPU emulation using default xilinx:adm-pcie-7v3:1ddr:3.0 DSA"
	@echo "make -f sdaccel.mk run_cpu_em"
	@echo ""
	@echo "Compile and run hardware emulation using default xilinx:adm-pcie-7v3:1ddr:3.0 DSA"
	@echo "make -f sdaccel.mk run_hw_em"
	@echo ""
	@echo "Compile host executable only"
	@echo "make -f sdaccel.mk host"
	@echo ""
	@echo "Compile XCLBIN file for system run only"
	@echo "make -f sdaccel.mk xbin_hw"
	@echo ""
	@echo "Compile and run CPU emulation using xilinx:tul-pcie3-ku115:2ddr:3.0 DSA"
	@echo "make -f sdaccel.mk XDEVICE=xilinx:tul-pcie3-ku115:2ddr:3.0 run_cpu_em"
	@echo ""
	@echo "Clean working diretory"
	@echo "make -f sdaccel.mk clean"
	@echo ""
	@echo "Super clean working directory"
	@echo "make -f sdaccel.mk cleanall"

